@page "/settings"
@using EnigmaModel
@using System.ComponentModel.DataAnnotations
@inject IEnigmaService enigmaService
@rendermode InteractiveAuto


<PageTitle>Engima Encryption</PageTitle>


<h1 class="text-center fw-bold text-light">Settings</h1>
<h2 class="text-light fw-bold">Rotars:</h2>
<p class="text-light fw-bold">RotarI: [I, B, L, E, S, K, C, O, T, Z, N, T, O, W, Y, H, X, V, J, Q, A, E, B, R, G, L] </p>
<p class="text-light fw-bold">RotarII: [E, B, O, H, C, L, R, O, J, A, S, M, Q, Y, X, U, I, Z, W, T, G, V, K, D, N, E]</p>
<p class="text-light fw-bold">RotarIII: [O, D, Y, T, N, G, W, R, B, U, E, L, S, A, F, K, R, I, N, P, A, Y, V, K, C, I]</p>
<p class="text-light fw-bold">RotarVI: [Y, N, T, D, R, X, C, K, E, V, O, B, H, P, W, G, L, U, A, K, F, M, I, Q, A, T]</p>
<p class="text-light fw-bold">RotarV: [V, Z, I, J, L, M, N, X, F, Y, K, W, G, H, O, P, Q, R, S, T, U, A, B, C, D, E]</p>

<h2 class="fw-bold text-light">Options:</h2>
<p>Rotar: @rotar1</p>
<p>Position @rotar1Position</p>
<p>Notch @rotar1Notch</p>

<div class="pb-5">
    <p class="text-light fw-bold">Selected Rotars:</p>
    <div class="bg-secondary rounded p-2" style="width:400px">
        <div class="d-flex">
            <p class="pe-4 fw-bold">First Rotar: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar1" ValueChanged="HandleRotar1Change" ValueExpression="@(()=>rotar1)" >
                <option value="0">RotarI</option>
                <option value="1">RotarII</option>
                <option value="2">RotarIII</option>
                <option value="3">RotarIV</option>
                <option value="4">RotarV</option>
            </InputSelect>
        </div>
        <div class="d-flex mt-2">
            <p class="fw-bold pe-4">Starting position: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar1Position" ValueChanged="HandleRotar1PositionChange" ValueExpression="@(()=>rotar1Position)">
                @for (int i = 0; i <26; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
        <div class="d-flex mt-2">
            <p class="fw-bold pe-4">Notch position: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar1Notch" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar1Notch)">
                @for (int i = 0; i < 26; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="bg-secondary rounded p-2 mt-4" style="width:400px">
        <div class="d-flex">
            <p class="pe-4 fw-bold">Second Rotar: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar2" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar2)">
                <option value="0">RotarI</option>
                <option value="1" selected>RotarII</option>
                <option value="2">RotarIII</option>
                <option value="3">RotarIV</option>
                <option value="4">RotarV</option>
            </InputSelect>
        </div>
        <div class="d-flex mt-2">
            <p class="fw-bold pe-4">Starting position: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar2Position" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar2Position)">
                @for (int i = 0; i < 26; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
        <div class="d-flex mt-2">
            <p class="fw-bold pe-4">Notch position: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar2Notch" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar2Notch)">
                @for (int i = 0; i < 26; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="bg-secondary rounded p-2 mt-4" style="width:400px">
        <div class="d-flex">
            <p class="pe-4 fw-bold">Third Rotar: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar3" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar3)">
                <option value="0">RotarI</option>
                <option value="1">RotarII</option>
                <option value="2" selected>RotarIII</option>
                <option value="3">RotarIV</option>
                <option value="4">RotarV</option>
            </InputSelect>
        </div>
        <div class="d-flex mt-2">
            <p class="fw-bold pe-4">Starting position: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar3Position" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar3Position)">
                @for (int i = 0; i < 26; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
        <div class="d-flex mt-2">
            <p class="fw-bold pe-4">Notch position: </p>
            <InputSelect class="form-select" style="width:200px" TValue="int" Value="rotar3Notch" ValueChanged="HandleRotar1NotchChange" ValueExpression="@(()=>rotar3Notch)">
                @for (int i = 0; i < 26; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
    </div>


</div>
@code {
    int rotar1;
    int rotar1Position;
    int rotar1Notch;

    int rotar2;
    int rotar2Position;
    int rotar2Notch;

    int rotar3;
    int rotar3Position;
    int rotar3Notch;

    protected override void OnInitialized()
    {
        rotar1 = enigmaService.GetSelectedRotar(0);
        rotar1Position = enigmaService.GetPosition(0);
        rotar1Notch = enigmaService.GetNotch(0);

        rotar2 = enigmaService.GetSelectedRotar(1);
        rotar2Position = enigmaService.GetPosition(1);
        rotar2Notch = enigmaService.GetNotch(1);

        rotar3 = enigmaService.GetSelectedRotar(2);
        rotar3Position = enigmaService.GetPosition(2);
        rotar3Notch = enigmaService.GetNotch(2);
    }


    private void HandleRotar1Change(int selectedValue)
    {
        rotar1 = selectedValue;
        enigmaService.SetRotar(0, selectedValue);
        rotar1Position = enigmaService.GetPosition(0);
        rotar1Notch = enigmaService.GetNotch(0);
    }
    private void HandleRotar1PositionChange(int selectedValue)
    {
        rotar1Position = selectedValue;
        enigmaService.SetPosition(rotar1, selectedValue);
    }
    private void HandleRotar1NotchChange(int selectedValue)
    {
        rotar1Notch = selectedValue;
        enigmaService.SetNotch(rotar1, selectedValue);
    }
}
